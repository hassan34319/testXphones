// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

// schema.prisma


model CartItem {
  id         String       @id @default(uuid())
  image      String
  name       String
  productId  String
  color      String
  capacity   Int
  grade      String
  price      Float
  quantity   Int
  order     Order     @relation(fields: [orderId], references: [id])
  orderId    String
  @@index([orderId])
}


model User {
  id              String @id @default(uuid())
  firstName            String?
  lastName            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  phoneNumber     String?
  shippingAdress  String?
  postalCode      String?
  country         String?
  city            String?
  accounts Account[]
  orders Order[]
}

model Order {
  id   String @id
    createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  items           CartItem[]
  userId          String
  total           Float
  discount        Float?
  promo           String?
  calculated      Float?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  status         String?
  @@index([userId])
}

model Account {
  id String @id @default(uuid())
  userId             String   
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}





// Remove the Product model since only the productId is stored in CartItem
